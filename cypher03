<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Complete SVG Caesar Cipher Wheel</title>
<style>
  svg {
    width: 500px; /* Increased size for visibility */
    height: 500px;
    margin: 20px;
    transform-origin: center;
  }
  .arrow {
    transition: transform 1s;
    stroke: red;
    stroke-width: 0.5;
  }
</style>
</head>
<body>
<h2>Interactive Caesar Cipher Wheel</h2>
<svg viewBox="0 0 100 100">
  <circle cx="50" cy="50" r="40" fill="none" stroke="black" />
  <!-- Arrow positioned initially pointing to 'A' -->
  <line x1="50" y1="50" x2="50" y2="10" class="arrow" />
</svg>
<label for="shift">Shift (number of positions):</label>
<input type="number" id="shift" name="shift" value="0" oninput="rotateArrow(this.value)">
<script>
const svgNS = "http://www.w3.org/2000/svg";
const svg = document.querySelector('svg');

function createLetter(angle, letter) {
  const radius = 35; // Adjusted for clear visibility
  const x = 50 + radius * Math.cos(-angle * Math.PI / 180);
  const y = 50 + radius * Math.sin(-angle * Math.PI / 180);
  const text = document.createElementNS(svgNS, "text");
  text.setAttribute("x", x);
  text.setAttribute("y", y);
  text.setAttribute("text-anchor", "middle");
  text.setAttribute("font-size", "3"); // Smaller font size for clarity
  text.setAttribute("alignment-baseline", "middle");
  text.textContent = letter;
  return text;
}

function rotateArrow(shift) {
  const degree = -shift * (360 / 26); // Negative for clockwise rotation
  document.querySelector('.arrow').style.transform = `rotate(${degree}deg)`;
}

// Generate alphabet around the wheel
document.addEventListener("DOMContentLoaded", () => {
  for (let i = 0; i < 26; i++) {
    const angle = 360 / 26 * i;
    const letter = String.fromCharCode(65 + i); // ASCII to character
    svg.appendChild(createLetter(angle, letter));
  }
});
</script>
</body>
</html>
